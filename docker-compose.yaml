version: "3.9"
services:
  db:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - /Users/oleginishev/DB_data/netology_lab:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
  candydendy:
    build:
      context: ./candydendy
      dockerfile: ./Dockerfile
    command: /entrypoint.sh
    volumes:
      - .:/candydendy
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SUPERUSER_PASSWORD=WS-x2950
      - POSTGRES_DB_HOST=db
      - POSTGRES_NAME=candydendydb
      - POSTGRES_USER=candydendyuser
      - POSTGRES_SCHEMA=candydendyschema
      - POSTGRES_PASSWORD=SuperSweetBuns2022
      - TECH_NAME=tech_user
      - TECH_EMAIL=tesh_user@fake.ru
      - TECH_PASSWORD=sWGkfjFLun3JWTUpFVzXPdVA3iQ6LD
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8000/api/free || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
  generate_db_data:
     build:
       context: ./generate_db_data
       dockerfile: ./Dockerfile
     command: /entrypoint.sh
     environment:
       - TECH_NAME=tech_user
       - TECH_PASSWORD=sWGkfjFLun3JWTUpFVzXPdVA3iQ6LD
     depends_on:
       candydendy:
         condition: service_healthy
  prometheus:
    image: prom/prometheus
    volumes:
      - ./volumes/prometheus/etc/:/etc/prometheus/
      - /Users/oleginishev/prometheus_data:/prometheus
    ports:
      - 9090:9090
    restart: always
    depends_on:
      candydendy:
        condition: service_healthy
  grafana:
    image: grafana/grafana
    volumes:
      - ./volumes/grafana/etc/dashboards:/etc/dashboards
      - ./volumes/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./volumes/grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./volumes/nginx/etc/nginx/conf.d/candydendy.conf:/etc/nginx/conf.d/candydendy.conf
      - ./volumes/nginx/etc/nginx/GeoIP/GeoIP.dat:/etc/nginx/GeoIP/GeoIP.dat
      - ./volumes/nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
#proxies = {
#    "http": "http://mnw88CmF:5JtCqyY3@78.136.203.168:50000"
#}
#r= requests.get("https://reg.ru",proxies=proxies)
